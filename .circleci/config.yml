# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
executors:
  node:
    docker:
      - image: circleci/node:10.15
    working_directory: ~/repo

commands:
  unified_cache:
    steps:
      - run: md5sum $(find . -type d -name 'node_modules' -prune -o -type f -name 'yarn.lock' -print) | sort -r > ~/lockfiles

  restore_repo:
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Branch }}-{{ .Revision }}
            - v1-repo-{{ .Branch }}-
            - v1-repo-

  restore_deps:
    steps:
      - unified_cache
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "~/lockfiles" }}

  apply_patches:
    steps:
      - run: patch -u lerna.json < ./patches/lerna.json.patch

  run_test:
    parameters:
      cwd:
        type: string
    steps:
      - restore_repo
      - restore_deps
      - run: yarn --cwd << parameters.cwd >> install --frozen-lockfile
      - run: yarn --cwd << parameters.cwd >> test

jobs:
  checkout_code:
    executor: node
    steps:
      - restore_repo
      - checkout
      - save_cache:
          paths: .
          key: v1-repo-{{ .Branch }}-{{ .Revision }}

  install_deps:
    executor: node
    steps:
      - restore_repo
      - restore_deps
      - apply_patches
      - run: yarn install --frozen-lockfile
      - run: yarn bootstrap
      - unified_cache
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: v1-dependencies-{{ checksum "~/lockfiles" }}

  # test_origin:
  # executor: node
  # steps:
  # - run_test:
  # cwd: ./packages/lambda-origin-response

  test_shared:
    executor: node
    steps:
      - run_test:
          cwd: ./packages/shared

  test_viewer:
    executor: node
    steps:
      - run_test:
          cwd: ./packages/aws-lambda-edge-viewer-request

  # test_stacks:
  #   executor: node
  #   steps:
  #     - restore_repo

  lint:
    executor: node
    steps:
      - restore_repo
      - restore_deps
      - apply_patches
      - run: yarn install --frozen-lockfile
      - run: yarn bootstrap
      - run: yarn lint "./packages/*/{src,lib,__tests__}/**/*.ts"

workflows:
  version: 2.1
  tests:
    jobs:
      - checkout_code
      - install_deps:
          requires:
            - checkout_code
      # - test_origin:
      # requires:
      # - install_deps
      - test_shared:
          requires:
            - install_deps
      - test_viewer:
          requires:
            - install_deps
      # - test_stacks:
      #     requires:
      #       - checkout_code
      - lint:
          requires:
            - install_deps
